[project]
name = "{{cookiecutter.project_slug}}"
version = "{{ cookiecutter.version }}"
description = "{{cookiecutter.project_description}}"
authors = [{ name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}" }]
requires-python = ">={{cookiecutter.python_version}},<4.0"
readme = "README.md"
dependencies = [
    "python-dotenv>=1.1.1,<2",
    "loguru>=0.7.3,<0.8",
]

[dependency-groups]
dev = [
    "pytest>=7.2.0,<8",
    "mypy>=1.5.1,<2",
    "pre-commit>=3.4.0,<4",
    "tox>=4.11.1,<5",
    "ipykernel>=6.25.1,<7",
    {% if cookiecutter.codecov == 'y' -%}
    "pytest-cov>=4.0.0"
    {% endif -%}
]

{% if cookiecutter.sphinx == 'y' -%}
docs = [
    "sphinx-rtd-theme==1.2.2",
    "nbsphinx==0.9.2",
    "nbformat==5.9.2"
]
{%- endif %}

[tool.hatch.build.targets.sdist]
include = ["{{cookiecutter.project_slug}}"]

[tool.hatch.build.targets.wheel]
include = ["{{cookiecutter.project_slug}}"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
files = ["{{cookiecutter.project_slug}}"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.pytest.ini_options]
testpaths = ["tests"]

{% if cookiecutter.codecov == "y"-%}
[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.project_slug}}"]
{% endif%}
