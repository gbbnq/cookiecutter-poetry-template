[tool.poetry]
name = "{{cookiecutter.project_slug}}"
version = "{{ cookiecutter.version }}"
description = "{{cookiecutter.project_description}}"
authors = ["{{cookiecutter.author}} <f{{cookiecutter.email}}>"]
readme = "README.md"
packages = [
  {include = "{{cookiecutter.project_slug}}"}
]

[tool.poetry.dependencies]
python = ">={{cookiecutter.python_version}},<4.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
{% if cookiecutter.codecov == 'y' -%}
pytest-cov = "^4.0.0"
{% endif -%}
mypy = "^1.5.1"
pre-commit = "^3.4.0"
tox = "^4.11.1"
ipykernel = "^6.25.1"

{% if cookiecutter.sphinx == 'y' -%}
[tool.poetry.group.docs.dependencies]
sphinx-rtd-theme = "^1.2.2"
nbsphinx = "^0.9.2"
nbformat = "^5.9.2"
{%- endif %}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["{{cookiecutter.project_slug}}"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.pytest.ini_options]
testpaths = ["tests"]

{% if cookiecutter.codecov == "y"-%}
[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.project_slug}}"]
{% endif%}
